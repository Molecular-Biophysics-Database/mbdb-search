profiles: [record, draft, files, draft_files]
record:
  use: [invenio]
  module:
    qualified: mbdb_mst
  properties:
    metadata:
      properties:
        general_parameters:
          use: '#/$defs/General_parameters'
          required: true
          help.en: The general parameter of the experiment
        method_specific_parameters:
          use: '#/$defs/MST_specific_parameters'
          required: true
          help.en: The parameters of the experiment that is specific to MST/TRIC/Spectral
            Shift
    collected_default_search_fields:
      type: fulltext
      marshmallow:
        read: false
        write: false
  files:
    properties:
      name:
        type: keyword
        help.en: Name of the file
        required: true
      content_type:
        type: keyword
        enum: [text, binary, text and binary]
        help.en: Type of the file content in terms of how it can be read (text, binary,
          etc.)
        required: true
      context:
        type: keyword
        enum: [raw measurement data, derived measurement data, quality control report,
          performance test report]
        help.en: The context the file should be understood within (e.g. raw measurement
          data)
        required: true
      originates_from:
        type: keyword
        enum: [Instrument software, User, MBDB]
        help.en: What is the source of the file
        required: true
      size:
        type: integer
        minimum: 0
        help.en: Size of the file
        required: true
      description:
        type: keyword
        help.en: Short description of what the file contains
      recommended_software:
        type: keyword
        help.en: The name of the software recommended for opening and working with
          the file
      processing_steps[]:
        ^minItems: 1
        ^help.en: List of the processing steps performed on the file before it was
          deposited (e.g. exported to xlsx)
        ^required: true
        use: '#/$defs/Processing_step'
    use: [invenio_files]
    resource:
      base-classes: [oarepo_ui.resources.file_resource.S3RedirectFileResource]
  draft: {}
  draft-files:
    resource:
      base-classes: [oarepo_ui.resources.file_resource.S3RedirectFileResource]
  mapping:
    template:
      settings:
        index.mapping.total_fields.limit: 3000
        index.mapping.nested_fields.limit: 200
        index.query.default_field: collected_default_search_fields
  resource-config:
    base-html-url: /mst/
plugins:
  builder:
    disable: [script_sample_data]
  packages: [oarepo-model-builder-files==4.*, oarepo-model-builder-cf==4.*, oarepo-model-builder-vocabularies==4.*,
    oarepo-model-builder-relations==4.*, oarepo-model-builder-polymorphic==1.*, oarepo-model-builder-drafts,
    oarepo-model-builder-drafts-files]
$defs:
  MST_specific_parameters:
    properties:
      schema_version:
        type: keyword
        enum: [0.9.6]
        help.en: The schema version used to annotate the MST method specific parameters
        required: true
      experiment_type:
        type: keyword
        enum: [Affinity, Concentration, Other]
        help.en: The type of physical parameter that was sought
        required: true
      signal_type:
        type: keyword
        enum: [Initial intensity, TRIC/MST, Spectral shift]
        help.en: The type of signal that was being measured
        required: true
      excitation_led_color:
        type: keyword
        enum: ['RED (ex 605-645nm, em 660-720nm)', 'RED (ex 610-645nm, em 680-720nm)',
          'GREEN (ex 555-585nm, em 605-690nm)', 'GREEN (ex 515-550nm, em 565-600nm)',
          'BLUE (ex 480-500nm, em 515-550nm)', 'BLUE (ex 460-500nm, em 515-560nm)',
          'UV (ex 260-300nm, em 330-380nm)', Spectral shift]
        help.en: The color of the excitation LED used for the experiment. NOTE that
          colors are specific to the combination in which it occurs, e.g. the GREEN
          in a BLUE/GREEN instrument, is not the same as the GREEN in a GREEN/RED
          instrument
        required: true
      excitation_led_power:
        type: double
        minimum: 0.0
        maximum: 100.0
        help.en: The power, in percentage, of the excitation LED used in experiment
        required: true
      ir_mst_laser_power:
        type: double
        minimum: 0.0
        maximum: 100.0
        help.en: The power of the infrared LASER used in the experiment in percentages.
          Even though a change in nomenclature occurred in Nanotemper's control software,
          the underlying data is still stored in percentages. Use the following conversion;
          Low = 20, Medium = 40, High = 60
        required: true
      measurements[]:
        ^minItems: 1
        ^help.en: List of the information about each measurement. This includes target(s),
          ligand(s), chemical environment, and the position of the sample within the
          instrument
        ^required: true
        use: '#/$defs/Measurement'
      data_analysis[]:
        ^minItems: 1
        ^help.en: Details of how the data was processed and modelled in order to derive
          parameters from it
        use: '#/$defs/MST_data_analysis'
  MST_data_analysis:
    properties:
      derived_parameter:
        type: relation
        model: '#derived-parameter'
        keys: [id, name]
      measurements[]:
        ^minItems: 1
        ^help.en: List of the measurements that was analyzed together for a specific
          parameter
        type: relation
        model: '#mst-measurement'
        keys: [id, name]
      f_cold_and_hot:
        use: '#/$defs/F_cold_and_hot'
        help.en: If the data was analyzed with time windows corresponding to fluorescence
          before and after an IR laser was heating the sample the edges of the time
          windows can be specified here
      data_processing_steps[]:
        ^minItems: 1
        ^help.en: Describe the steps in the data analysis prior to fitting (removing
          outliers in the raw data, applying smoothing filters, etc.)
        use: '#/$defs/Processing_step'
      data_fitting:
        use: '#/$defs/Data_fitting'
        help.en: The details of how data fitting of the data to obtain the derived
          parameter was performed
  F_cold_and_hot:
    properties:
      time_unit:
        use: '#/$defs/TIME_UNITS'
        required: true
        help.en: The unit of time used for reporting measurement data
      f_cold_start:
        type: double
        minimum: -100.0
        help.en: Numerical value of the start-point of time interval used to establish
          the initial fluorescence, F_cold
        required: true
      f_cold_end:
        type: double
        minimum: -100.0
        help.en: Numerical value of the end-point of time interval used to establish
          the initial fluorescence, F_cold
        required: true
      f_hot_start:
        type: double
        minimum: 0.0
        help.en: Numerical value of the start-point of time interval used to establish
          the fluorescence temperature induced change in fluorescence, F_hot
        required: true
      f_hot_end:
        type: double
        minimum: 0.0
        help.en: Numerical value of the end-point of time interval used to establish
          the fluorescence temperature induced change in fluorescence, F_hot
        required: true
  Measurement:
    properties:
      id:
        type: keyword
        required: true
      name:
        type: keyword
        help.en: Name (id) of the measurement which must be unique within a record
          (i.e. triplicates must be named individually in the raw data file). The
          name must allow location of the measurement data within the raw data file
          as well as processed data files if these are present
        required: true
      position:
        type: keyword
        help.en: Position of the measured sample within the instrument
        required: true
      sample:
        use: '#/$defs/Sample'
        required: true
        help.en: Information about the sample including concentrations of ligands
          and targets, and which chemical environment the sample was composed of
      measured_data:
        properties:
          x_data:
            use: '#/$defs/Measured_data_series'
            required: true
            help.en: Values for the independent variable, normally time, of the measured
              data
          y_data:
            use: '#/$defs/Measured_data_series'
            required: true
            help.en: Values for the dependent variable, normally fluorescence intensity,
              of the measured data
    id: mst-measurement
  Sample:
    properties:
      targets[]:
        ^minItems: 1
        ^help.en: List of names (ids), from the entities of interest defined in the
          general parameters, of directly measured entities and entities at constant
          concentration for a series of measurements and their concentration
        ^required: true
        use: '#/$defs/Entity_constituent'
      ligands[]:
        ^minItems: 1
        ^help.en: List of names (ids) of entities (from the entities of interest defined
          in the general parameters) that were used to alter the behavior of the target(s)
          or entities present at varying concentrations for a series of measurements
          and their concentration
        ^required: true
        use: '#/$defs/Entity_constituent'
      chemical_environment:
        type: relation
        model: '#chemical-environment'
        keys: [id, name]
        required: true
      container:
        type: keyword
        enum: [Monolith Standard Capillary, Monolith Premium Capillary, Monolith LabelFree
            Capillary, Monolith LabelFree Premium Capillary, Monolith NT.Automated
            Capillary Chip, Monolith NT.Automated Premium Capillary Chip, Monolith
            NT.Automated LabelFree Capillary Chip, Monolith NT.Automated LabelFree
            Premium Capillary Chip, 384-well plate, other]
        help.en: The container the sample was in
        required: true
      preparation[]:
        ^minItems: 1
        ^help.en: List of steps taken to prepare the sample
        use: '#/$defs/Step'
  General_parameters:
    properties:
      schema_version:
        type: keyword
        enum: [0.9.15]
        help.en: The schema version used to annotate the general parameters
        required: true
      record_information:
        use: '#/$defs/Record_information'
        required: true
        help.en: Information about the record itself, including whether this particular
          record is associated with other records
      depositors:
        use: '#/$defs/Depositors'
        required: true
        help.en: Information about the depositors (authors) of this record
      associated_publications:
        use: '#/$defs/Associated_publications'
        help.en: Information about if data in this record is associated with published
          literature
      funding_reference[]:
        ^minItems: 1
        ^help.en: List of information about the grants that supported generation of
          the raw data annotated by this record. Note that this information is based
          on OpenAire Projects
        keys: [id, title, props.funder_name]
        vocabulary-type: grants
        type: vocabulary
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      technique:
        use: '#/$defs/SUPPORTED_TECHNIQUES'
        required: true
        help.en: The type of experimental technique used for collecting the raw data
          annotated by this record
      collection_start_time:
        type: date
        help.en: The date when collection of the raw data began
        required: true
      instrument:
        use: '#/$defs/Instrument'
        required: true
        help.en: Information about the instrument being used to collect (measure)
          the raw data annotated by this record
      physical_conditions_at_sample_handling:
        use: '#/$defs/Physical_conditions'
        help.en: Information about the physical conditions immediately before sample
          handling. Especially relevant when the conditions differ from the measurement
          conditions or where special precautions were taken (e.g. keeping samples
          on ice until measured, or stored under Argon atmosphere until it was measured)
      chemical_information:
        use: '#/$defs/Chemical_information'
        required: true
        help.en: Information about entities of interest that were being measured (e.g.
          Lysozyme) or used to alter the behaviour of the measured species (e.g. Peptidoglycan),
          and the chemical environments that was used in the measurement (e.g. buffers,
          cleaning solutions)
      derived_parameters[]:
        ^minItems: 1
        ^help.en: List of the parameters (results) that were derived from analyzing
          measured raw data, and which steps were taken to obtain them
        use: '#/$defs/Derived_parameter'
        type: nested
      raw_measurements[]:
        ^minItems: 1
        ^help.en: List of file(s) containing the raw measurements
        ^ui_file_context:
          type: keyword
          enum: [raw measurement data]
        type: url
  Record_information:
    properties:
      title:
        type: keyword
        help.en: Short descriptive title of the record
        required: true
        mapping:
          copy_to: collected_default_search_fields
      keywords[]:
        ^minItems: 1
        ^help.en: User chosen keywords describing the record content (e.g. antibody,
          epitope, ligand optimization, SARS-CoV-2, agonist, antagonist, HIV, etc.)
        ^required: true
        type: keyword
        mapping:
          copy_to: collected_default_search_fields
      measurement_group_id:
        type: keyword
        help.en: Unique and persistent identifier which can be generated upon deposition
          of the first if a group of data is deposited at the same time. These can
          be used to specified records are closely connected e.g. one sample measured
          with multiple techniques. For more loosely connected results the project
          field should be used as sole link
      project:
        use: '#/$defs/Project'
        help.en: Projects are typically longer running research projects that would
          be expected to have several records associated with them over time
      access_rights:
        type: keyword
        enum: [open access, embargoed access, restricted access]
        help.en: The access rights to the uploaded files. There are three options,
          1) "open access" where the files are accessible immediately when the deposition
          is published, 2) "embargoed access" where the files will only become available
          after a specified date, 3) "restricted access" where depositors are of the
          record are the only ones who has access
        required: true
      metadata_access_rights:
        type: keyword
        enum: [open access, embargoed access, restricted access]
        help.en: The access rights to the metadata. Minimal metadata that includes
          title and depositors is accessible regardless of which type is chosen as
          it is required to obtain a DOI. There are three options, 1) "open access"
          where the complete metadata are accessible immediately when the deposition
          is published, 2) "embargoed access" where the files will only become available
          after a specified date, 3) "restricted access" where depositors are of the
          record are the only ones who has access
        required: true
      publisher:
        type: keyword
        enum: [MBDB]
        help.en: When made available MBDB is to be considered the publisher, however,
          the depositors are still the owners
        required: true
      resource_type_general:
        type: keyword
        enum: [Dataset]
        help.en: All records are considered to be datasets
        required: true
      resource_type:
        type: keyword
        help.en: DataCite item which shows type of dataset the record is and corresponds
          directly to which kind of technique was used (MST/BLI/SPR)
        required: true
      internal_id:
        type: keyword
        help.en: Unique and persistent internal identifier the record. This will automatically
          be generated upon deposition
        required: true
      identifier:
        type: keyword
        help.en: The (external) identifier of the record which is a DOI generated
          by Datacite. This will automatically be generated when the record is published
        required: true
      subject_category:
        type: keyword
        enum: [Biophysics]
        help.en: DataCite subject category the record data belongs to default is Biophysics
        required: true
      deposition_date:
        type: date
        help.en: The date when the data was deposited; automatically generated
        required: true
      date_available:
        type: date
        help.en: The date when the data was/will be made publicly available. Will
          be automatically generated
  Instrument:
    properties:
      manufacturer:
        use: '#/$defs/COMPANIES'
        required: true
        help.en: Name of the manufacturer of the instrument used for raw data collection
      name:
        type: keyword
        help.en: The name of the instrument as provided by the manufacturer
        required: true
      model:
        type: keyword
        help.en: Model number and/or setup details of instrument used for raw data
          collection; include special instrument features (e.g. 10.1,RED/BLUE LASER,
          backreflection optics)
      performance_test:
        use: '#/$defs/Performance_test'
        help.en: If a performance test of the instrument that was carried out, the
          details and results can be specified here
  Entity_base:
    properties:
      id:
        type: keyword
        required: true
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
    id: entity
  Entity:
    help.en: Details of the entity including identifiers and protocols used to obtain
      the entity. Which information is required, varies depending the type of entity
    required: true
    schemas:
      Polymer:
        use: '#/$defs/EntityPolymerPolymorphic'
        required: true
      Chemical:
        use: '#/$defs/EntityChemicalPolymorphic'
        required: true
      Molecular assembly:
        use: '#/$defs/EntityMolecular_assemblyPolymorphic'
        required: true
      Complex substance of biological origin:
        use: '#/$defs/EntityComplex_substance_of_biological_originPolymorphic'
        required: true
      Complex substance of environmental origin:
        use: '#/$defs/EntityComplex_substance_of_environmental_originPolymorphic'
        required: true
      Complex substance of chemical origin:
        use: '#/$defs/EntityComplex_substance_of_chemical_originPolymorphic'
        required: true
      Complex substance of industrial production origin:
        use: '#/$defs/EntityComplex_substance_of_industrial_production_originPolymorphic'
        required: true
    type: polymorphic
    discriminator: type
    id: entity
  Entity_constituent:
    properties:
      entity:
        type: relation
        model: '#entity'
        keys: [id, name]
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the entity
  Molecular_assembly:
    properties:
      external_databases[]:
        ^minItems: 1
        ^help.en: List of identifiers to records in external databases containing
          information about the molecular assembly as a whole can be specified here
          (e.g. PDB:1YQ2 ); information about the individual components should be
          specified in the details of the individual components
        type: keyword
        mapping:
          copy_to: collected_default_search_fields
      components[]:
        ^minItems: 1
        ^help.en: Description of the individual components (e.g. polypeptide, heme,
          lipids, metal ions etc.) the molecular assembly is composed of (e.g. Hemoglobin
          alpha) and how many copies of each component were present
        ^required: true
        use: '#/$defs/Assembly_component'
        type: polymorphic
        mapping:
          type: nested
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the molecular assembly
      chemical_modifications[]:
        ^minItems: 1
        ^help.en: List describing deliberate modifications made to the molecular assembly
          through chemical, biochemical, or physical means
        use: '#/$defs/Modification'
        type: nested
      supplier:
        use: '#/$defs/Supplier'
        help.en: If the molecular assembly was purchased from a supplier, the name
          and catlog number can be specified here
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the molecular assembly was stored between being
          acquired and measured, including temperature and duration
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: The protocol used for preparing the molecular assembly
        use: '#/$defs/Step'
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the macromolecular assembly can be
          specified here
        type: keyword
  Assembly_component_base:
    properties:
      name:
        type: keyword
        help.en: Short descriptive name (id) given to the assembly component. The
          name must be unique within a record
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical]
        help.en: The type of component, options are (biological) Polymer and Chemical
        required: true
      copy_number:
        type: double
        minimum: -1.0
        help.en: Number of molecules of the component within the assembly, -1 if unknown
        required: true
  Assembly_component:
    help.en: Details about the assembly component
    required: true
    schemas:
      Polymer:
        use: '#/$defs/Assembly_componentPolymerPolymorphic'
        required: true
      Chemical:
        use: '#/$defs/Assembly_componentChemicalPolymorphic'
        required: true
    type: polymorphic
    discriminator: type
  Polymer:
    properties:
      polymer_type:
        type: keyword
        enum: [cyclic-pseudo-peptide, peptide nucleic acid, polydeoxyribonucleotide,
          polydeoxyribonucleotide/polyribonucleotide hybrid, polypeptide(D), polypeptide(L),
          polyribonucleotide, Other]
        help.en: The type of polymer (e.g. polypeptide(L))
        required: true
        mapping:
          copy_to: collected_default_search_fields
      sequence:
        type: keyword
        help.en: Primary sequence of the polymer, using single letter codes, including
          variant (e.g. SAGRELLE, AGTTA,). For non-natural see link for nomenclature
        mapping:
          copy_to: collected_default_search_fields
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the polymer
      external_databases[]:
        ^minItems: 1
        ^help.en: List of identifiers to records in external databases containing
          information about the polymer can be specified here (e.g UNIPROT:Q8KRF6)
        type: keyword
        mapping:
          copy_to: collected_default_search_fields
      variant:
        type: keyword
        help.en: Descriptive name indicating differences of primary sequence of the
          polymer as compared to the most common form, or wildtype, including mutations,
          purification tags, etc. (A53T, C-terminal GFP, N-terminal 6xHis-tag)
        mapping:
          copy_to: collected_default_search_fields
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      modifications:
        use: '#/$defs/Polymer_modifications'
        help.en: If the polymer contains modifications such as non-natural aminoacids,
          post translational modification, or chemically modifications like labeling,
          it can be specified here
      expression_source_type:
        type: keyword
        enum: [Natively, Recombinantly, Synthetically]
        help.en: How the polymer was produced
        required: true
      expression_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
      supplier:
        use: '#/$defs/Supplier'
        help.en: If the polymer was purchased from a supplier, the name and catalog
          number can be specified here (Merck, SKU 10837059001)
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the polymer assembly between being acquired
          and measured, including temperature and duration
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the polymer can be specified here
        type: keyword
  Polymer_modifications:
    properties:
      synthesis[]:
        ^minItems: 1
        ^help.en: Modifications (e.g. non-natural amino acids) of the polymer made
          during synthesis (e.g. translation) of the polymer
        use: '#/$defs/Modification'
        type: nested
      biological_postprocessing[]:
        ^minItems: 1
        ^help.en: Modifications of the polymer made after synthesis (e.g. posttranslational
          modifications, DNA methylation) by the organism where synthesis occurred
          (e.g. glycosylation)
        use: '#/$defs/Modification'
        type: nested
      chemical[]:
        ^minItems: 1
        ^help.en: Modifications of the polymer introduced by chemical, biochemical,
          or physical means in vitro (e.g. lysine methylation, cysteine iodoacetamide
          labeling, deglycosylation, covalent fluorescent labeling)
        use: '#/$defs/Modification'
        type: nested
  Chemical_information:
    properties:
      chemical_environments[]:
        ^minItems: 1
        ^help.en: Composition of the chemical environment (colloquially known as buffer)
          which are not being directly used to affect the behavior of the directly
          measured entities during the measurement
        ^required: true
        use: '#/$defs/Chemical_environment'
        type: nested
      entities_of_interest[]:
        ^minItems: 1
        ^help.en: List of the entities that are being directly measured, as well as
          the entities that are being used as a variable to influence the behavior
          of the directly measured entities (e.g. lysozyme, NAG3, NaCl)
        ^required: true
        use: '#/$defs/Entity'
        type: polymorphic
        mapping:
          type: nested
  Chemical:
    properties:
      inchikey:
        type: keyword
        help.en: '[InChIKey]() identifier of the chemical. In case of chemical polymers
          please specify the InChIKey of the monomer and specify the specific type
          in the additional identifiers field (e.g. if PEG 3350 was employed, the
          InChiKey of ethylene glycol, i.e. LYCAIKOWRPUZTN-UHFFFAOYSA-N should be
          specified here)'
        required: true
        mapping:
          copy_to: collected_default_search_fields
      additional_identifiers[]:
        ^minItems: 1
        ^help.en: Unique and persistent identifier from an external source; options
          of sources are CAS number, Pubchem Compound ID, and Pubchem Substance ID
        type: keyword
      isotopic_labeling:
        type: keyword
        help.en: If the isotopic composition of the chemical was altered from the
          naturally occurring one, it can be specified here (e.g. 15N, 13C)
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the polymer
      supplier:
        use: '#/$defs/Supplier'
        help.en: The name of the supplier and the catalog number of the chemical
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the chemical can be specified here
          (e.g. RNase free water, recrystallization, desalting)
        type: keyword
  Chemical_environment:
    properties:
      id:
        type: keyword
        required: true
      name:
        type: keyword
        help.en: Name of the chemical environment (e.g. Measurement Buffer). The name
          must be unique within a record as it will be referred to the in method specific
          section in when describing the composition of the individual samples or
          measurement steps
        required: true
      solvent[]:
        ^minItems: 1
        ^help.en: Information about the solvent component(s) of the chemical environment
          (e.g. water, D2O, DMSO, EtOH) can be specified here
        ^required: true
        use: '#/$defs/Chemical_constituent'
        type: polymorphic
        mapping:
          type: nested
      constituents[]:
        ^minItems: 1
        ^help.en: List of the constituents, excluding solvent components, that made
          up the chemical environment (i.e. buffer system, salts, surfactants, crowding
          agents, serum, etc.)
        use: '#/$defs/Constituent'
        type: polymorphic
        mapping:
          type: nested
      ph:
        use: '#/$defs/Ph'
        required: true
        help.en: The pH value of the chemical environment and how the value was determined
      ionic_strength:
        use: '#/$defs/Ionic_strength'
        help.en: The ionic strength of the chemical environment
      dynamic_viscosity:
        use: '#/$defs/Dynamic_viscosity'
        help.en: The dynamic viscosity of the chemical environment
      degassing_method:
        type: keyword
        enum: [Low pressure, Heating, Sonication bath]
        help.en: If chemical environments was degassed, the method can be specified
          here
      ultrafiltration_method:
        use: '#/$defs/Ultrafiltration'
        help.en: If the chemical environment was subjected to ultrafiltration, the
          method method can be specified here
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the chemical environment can be specified
          here (e.g. prepared just prior to conducting the measurement, additional
          treatments like UV irradiation, specific storage container of chemical environment
          if that influenced the measurement etc.)
        type: keyword
    id: chemical-environment
  Constituent_base:
    properties:
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  Chemical_constituent_base:
    properties:
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Chemical]
        help.en: The type of the constituent, options are Chemical
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  Chemical_constituent:
    help.en: The details about the chemically defined constituent i.e. of type Polymer,
      Chemical, and Molecular assembly
    required: true
    schemas:
      Chemical:
        use: '#/$defs/Chemical_constituentChemicalPolymorphic'
        required: true
    type: polymorphic
    discriminator: type
  Constituent:
    help.en: The details about the constituent which can be of chemically well defined
      species of type Polymer, Chemical, Molecular assembly. Alternatively, if the
      constituent can only be defined in terms of a preparation protocol it should
      be described as a Complex substance of biological, environmental, chemical,
      or industrial production origin
    required: true
    schemas:
      Polymer:
        use: '#/$defs/ConstituentPolymerPolymorphic'
        required: true
      Chemical:
        use: '#/$defs/ConstituentChemicalPolymorphic'
        required: true
      Molecular assembly:
        use: '#/$defs/ConstituentMolecular_assemblyPolymorphic'
        required: true
      Complex substance of biological origin:
        use: '#/$defs/ConstituentComplex_substance_of_biological_originPolymorphic'
        required: true
      Complex substance of environmental origin:
        use: '#/$defs/ConstituentComplex_substance_of_environmental_originPolymorphic'
        required: true
      Complex substance of chemical origin:
        use: '#/$defs/ConstituentComplex_substance_of_chemical_originPolymorphic'
        required: true
      Complex substance of industrial production origin:
        use: '#/$defs/ConstituentComplex_substance_of_industrial_production_originPolymorphic'
        required: true
    type: polymorphic
    discriminator: type
  Complex_substance_of_biological_origin:
    help.en: Information about the biological substance the complex substance is derived
      from
    required: true
    schemas:
      Body fluid:
        use: '#/$defs/Body_fluid'
        required: true
      Cell fraction:
        use: '#/$defs/Cell_fraction'
        required: true
      Virion:
        use: '#/$defs/Virion'
        required: true
    type: polymorphic
    discriminator: derived_from
  Complex_substance_of_biological_origin_base:
    properties:
      derived_from:
        type: keyword
        enum: [Body fluid, Cell fraction, Virion]
        help.en: The biological substance the complex substance is derived from
        required: true
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        required: true
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
  Body_fluid:
    properties:
      fluid:
        type: keyword
        enum: [Blood, Fecal matter, Milk, Plasma, Saliva, Serum, Urine, Plant extract,
          Other]
        help.en: The body fluid the complex substance is derived from
        required: true
        mapping:
          copy_to: collected_default_search_fields
      health_status:
        type: keyword
        help.en: Health status of the donor organism where the body fluid was derived
          from (e.g. healthy, sick, patient with Diabetes type 2)
        required: true
  Cell_fraction:
    properties:
      fraction:
        type: keyword
        enum: [Ribosome, Cell wall, VesicleCell lysate/Cytoplasm, Cell Membrane, Extracellular
            matrix, Lysosome, Golgi Apparatus, Mitochondrion, Nucleus, Rough Endoplasmic
            Reticulum, Smooth Endoplasmic Reticulum, Vacuole, Chloroplast, Other]
        help.en: The subcelluar component e.g. (Ribosome)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      organ:
        type: keyword
        help.en: The organ the cell fraction was derived from (e.g. heart)
      tissue:
        type: keyword
        help.en: The tissue type the cell fraction was derived from
      cell_type:
        type: keyword
        help.en: The cell type the cell fraction was derived from
      health_status:
        type: keyword
        help.en: Health status of the donor organism where the cell fraction was derived
          from (e.g. healthy, sick, patient with Diabetes type 2)
        required: true
  Virion:
    properties:
      genetic_material:
        type: keyword
        enum: [No genetic material, Virus genome, Synthetic, Other]
        help.en: The genetic material carried by the virions (None, virus genome,
          synthetic)
        required: true
      capsid_type:
        type: keyword
        enum: [None, Native, Genetically Engineered, Synthetic, Other]
        help.en: The type of virion capsid (e.g. genetically engineered, None
        required: true
      envelope_type:
        type: keyword
        enum: [None, Native, Genetically Engineered, Synthetic, Other]
        help.en: The type of virion envelope (e.g. genetically engineered, None
        required: true
      host_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
      host_cell_type:
        type: keyword
        help.en: The host cell type the virion was produced in
  Complex_substance_of_environmental_origin:
    properties:
      source:
        type: keyword
        enum: [Fresh water, Marine, Ice core, Sediment, Sewage, Soil, Other]
        help.en: The environmental source where the complex substance was derived
          from
        required: true
        mapping:
          copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      location:
        use: '#/$defs/Coordinates'
        required: true
        help.en: The coordinates, in decimal notation, where the complex substance
          was collected
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
  Complex_substance_of_chemical_origin:
    properties:
      class:
        type: keyword
        enum: [Lipid_assembly]
        help.en: The chemical origin where the complex substance was derived from
        required: true
      details:
        use: '#/$defs/Lipid_assembly'
        required: true
        help.en: The chemical origin where the complex substance was derived from
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
  Lipid_assembly:
    properties:
      type:
        type: keyword
        enum: [Micelle, Liposome, Nanodisc, Sheet, Other]
        help.en: The type of lipid assembly
        required: true
      number_of_mono_layers:
        type: integer
        minimum: -1
        help.en: The number of lipid mono layers in the lipid assembly, -1 if unknown
        required: true
      size:
        use: '#/$defs/Size'
        required: true
        help.en: The size of the lipid assembly
      components[]:
        ^minItems: 1
        ^help.en: The components of the lipid assembly
        ^required: true
        use: '#/$defs/Assembly_component'
        type: polymorphic
        mapping:
          type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the lipid assembly, if applicable
        use: '#/$defs/Step'
  Complex_substance_of_industrial_production_origin:
    properties:
      product:
        type: keyword
        enum: [Beer, Cell medium, Whey, Other]
        help.en: The type of product, byproduct, or waste product the complex substance
          was derived from
        required: true
        mapping:
          copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
  Depositors:
    properties:
      depositor:
        use: '#/$defs/Person'
        required: true
        help.en: The person who made the deposition to MBDB
      principal_contact:
        use: '#/$defs/Person'
        required: true
        help.en: The person responsible for the record and the one to contact for
          inquiries, would typically be the principle investigator group leader, or
          laboratory head
      contributors[]:
        ^minItems: 1
        ^help.en: List of other people who contributed to generating the deposited
          data, metadata, derived parameters, or the deposition itself
        use: '#/$defs/Person'
        type: nested
  Person:
    properties:
      given_name:
        type: keyword
        help.en: The given name(s), including middlename(s), of the person
        required: true
        mapping:
          copy_to: collected_default_search_fields
      family_name:
        type: keyword
        help.en: The family name(s) the person
        required: true
        mapping:
          copy_to: collected_default_search_fields
      identifiers[]:
        ^minItems: 1
        ^help.en: Persistent identifier associated with the person, currently only
          ORCIDs are allowed
        type: keyword
        mapping:
          copy_to: collected_default_search_fields
      affiliations[]:
        ^minItems: 1
        ^help.en: The affiliation of the person. Note that this is based on the Research
          Organization Registry (ROR)
        keys: [id, title, props.city, props.state, props.country]
        vocabulary-type: affiliations
        type: vocabulary
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
  Publication:
    properties:
      pid:
        type: keyword
        help.en: Persistent identifier associated with the publication (e.g. DOI,
          ISBN)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      title:
        type: keyword
        help.en: The title of the publication
        mapping:
          copy_to: collected_default_search_fields
      publication_year:
        type: integer
        minimum: 1900
        help.en: The publication year
        required: true
      authors[]:
        ^minItems: 1
        ^help.en: Information about the authors of the publication
        use: '#/$defs/Person'
        type: nested
      resource_type:
        type: keyword
        enum: [Article, Book, Thesis]
        help.en: The type of publication
        required: true
      publisher:
        type: keyword
        help.en: The name of the publisher or journal name in case of article
  Project:
    properties:
      id:
        type: keyword
        help.en: Unique and persistent identifier which can be generated upon deposition
          of the first member of the project, which can be used to show a relation
          to other data within the MBDB
      title:
        type: keyword
        help.en: Short title of the project
        required: true
        mapping:
          copy_to: collected_default_search_fields
      description:
        type: keyword
        help.en: Short description of what the project is about
        required: true
      owner:
        use: '#/$defs/Person'
        required: true
        help.en: The person responsible for the project, typically a project leader,
          principle investigator, or group leader
  Associated_publications:
    properties:
      main:
        use: '#/$defs/Publication'
        help.en: Information about the publication where the raw data or derived parameters
          first appeared
      additional[]:
        ^minItems: 1
        ^help.en: Information about publications in addition to the main publication
        use: '#/$defs/Publication'
        type: nested
  Derived_parameter:
    properties:
      id:
        type: keyword
        required: true
      name:
        type: keyword
        help.en: Descriptive name (id) of the derived parameter (e.g. Kd of Lysozyme
          and VHH2). Must be unique within a record
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Concentration, Stoichiometry, Constant of association (K_A), Constant
            of dissociation (K_D), Association rate (k_on), Dissociation rate (k_off),
          Change in enthalpy (delta H), Change in entropy (delta S), Change in Gibbs
            free energy (delta G), Molecular weight (MW)]
        help.en: The type of physical parameter the derived parameter represents
        required: true
        mapping:
          copy_to: collected_default_search_fields
      entities_involved[]:
        ^minItems: 1
        ^help.en: List of chemical or molecular assemblies the derived parameter describes
          and how many copies of each are involved
        ^required: true
        use: '#/$defs/Entity_and_stoichiometry'
        type: nested
      value:
        type: double
        help.en: Numerical value of the derived parameter
        required: true
      value_error:
        use: '#/$defs/Value_error'
        help.en: The expected error of the derived parameter (e.g. in terms of standard
          deviations, or relative error)
      unit:
        type: keyword
        help.en: Unit of the derived parameter
        required: true
    id: derived-parameter
  Entity_and_stoichiometry:
    properties:
      entity:
        type: relation
        model: '#entity'
        keys: [id, name]
        required: true
      copy_number:
        type: double
        minimum: -1.0
        help.en: Number of copies of the entity that contribute to the derived parameter,
          -1 if unknown (e.g. if two individual copies of a polymer binds to another,
          the copy number would be 2)
        required: true
  Modification:
    properties:
      position:
        type: keyword
        help.en: The position where the modification occurs
      modification:
        type: keyword
        help.en: The common name/type of the modification
        required: true
      protocol[]:
        ^minItems: 1
        ^help.en: List of steps that led to the modification taking place
        use: '#/$defs/Step'
  Ultrafiltration:
    properties:
      pore_size:
        type: keyword
        enum: [0.2 µm, 0.22 µm, 0.45 µm, 0.5 µm, 1.2 µm, Other]
        help.en: The pore size of the filter
        required: true
      filter_material:
        type: keyword
        enum: [Polyethersulfone (PES), Polyvinylidene flouride (PVDF), Cellulose acetate
            (CA), Composite regenerated cellulose (CRC), Microporous Glass Fiber (MGF),
          Nylon, Polytetrafluoroethylene (PTFE), Hydrophilic Polytetrafluoroethylene
            (PTFE), Mixed cellulose ester (MCE), Polypropylene (PP)]
        help.en: The material the filter was composed of
  Step:
    properties:
      name:
        type: keyword
        help.en: Descriptive name of the step
        required: true
      description:
        type: keyword
        help.en: Short description of the step
        required: true
  Quality_control:
    properties:
      parameter:
        type: keyword
        enum: [aggregation state, homogeneity, identity, purity, stability, Other]
        help.en: Which aspect was targeted by the quality control (e.g. purity, stability,
          homogeneity, identity, aggregation state)
        required: true
      technique:
        type: keyword
        help.en: Which technique was used (e.g. SDS-PAGE MALDI-TOF, DLS, etc.)
        required: true
      storage_until_measurement:
        use: '#/$defs/Storage'
        required: true
        help.en: How the sample was stored between the quality control was performed
          until it was measured, including temperature and duration
      report:
        type: url
        help.en: Report with the results of the quality control, as a pdf file
        required: true
        ui_file_context:
          type: keyword
          enum: [quality control report]
  Data_fitting:
    properties:
      model:
        type: keyword
        help.en: Description of the model (e.g. 1:1 binding)
        required: true
      software_name:
        type: keyword
        help.en: The name of the software that was used for doing the data fitting
          (e.g. Excel)
      software_version:
        type: keyword
        help.en: The version of the software that was used for the step
      quality:
        type: double
        help.en: Numerical value representing the quality estimate of the derived
          parameter
      quality_type:
        type: keyword
        enum: [R^2, SEM, red. Chi^2, 1sigma, 2sigma, 3sigma, 5sigma, Skewness]
        help.en: Type of the quality estimate
  Processing_step:
    properties:
      name:
        type: keyword
        help.en: Short descriptive name of the processing step
        required: true
      description:
        type: keyword
        help.en: Description of what the processing step was
        required: true
      software_name:
        type: keyword
        help.en: The name of the software that was used for the step (e.g. Excel)
      software_version:
        type: keyword
        help.en: The version of the software that was used for the step
      software_tool:
        type: keyword
        help.en: The name of the tool within the specified software, i.e. a particular
          method called or "button pressed" (e.g. equation solver, buffer subtraction)
      link_to_source_code:
        type: url
        help.en: If processing was performed with software where the source code is
          legally available a link can be specified here (e.g. self-written python
          script in a GitHub repository
  Physical_conditions:
    properties:
      temperature:
        use: '#/$defs/Temperature'
        help.en: The storage temperature of the samples immediately prior to being
          measured and whether the temperature was actively being controlled (e.g.
          autosampler held at 15 degrees, stored on ice, room temperature)
      pressure:
        use: '#/$defs/Pressure'
        help.en: The storage pressure of the samples immediately prior to being measured
          and whether the pressure was actively being controlled, if applicable
      humidity:
        use: '#/$defs/Humidity'
        help.en: The storage humidity of the samples immediately prior to being measured
          and whether the humidity was actively being controlled, if applicable
      atmosphere:
        use: '#/$defs/Atmosphere'
        help.en: The storage atmosphere of the samples immediately prior to being
          measured and whether the atmosphere was actively being controlled, if applicable
  Value_error:
    properties:
      upper_error:
        type: double
        help.en: The upper error, i.e. the number that should be added the value to
          get the upper bound
        required: true
      lower_error:
        type: double
        help.en: The lower error, i.e. the number that should be subtracted from the
          value to get the lower bound
        required: true
      errors_are_relative:
        type: boolean
        help.en: Whether the errors should be interpreted as relative errors in percent
        required: true
      error_level:
        type: double
        minimum: 0.0
        help.en: How many standard deviations the error corresponds to
  Dynamic_viscosity:
    properties:
      value:
        type: double
        minimum: 0.0
        help.en: Numerical value of the dynamic viscosity
        required: true
      value_error:
        use: '#/$defs/Value_error'
        help.en: The expected error of the dynamic viscosity (e.g. standard deviation,
          % error)
      unit:
        type: keyword
        enum: [Pa s]
        help.en: The unit of the dynamic viscosity
        required: true
      obtained_by:
        use: '#/$defs/OBTAINED_TYPES'
        required: true
        help.en: The means by which the dynamic viscosity was obtained
  Ph:
    properties:
      value:
        type: double
        help.en: The pH value of the solution
        required: true
      value_error:
        use: '#/$defs/Value_error'
        help.en: The reported error of the value of pH (e.g. standard deviation, %
          error)
      obtained_by:
        use: '#/$defs/OBTAINED_TYPES'
        required: true
        help.en: The means through which the pH value was obtained
  Temperature:
    properties:
      value:
        type: double
        help.en: The numeric value of the temperature
        required: true
      value_error:
        use: '#/$defs/Value_error'
        help.en: The reported error of the value of the temperature (e.g. standard
          deviation, % error)
      operational_value:
        type: keyword
        enum: [Room temperature, On Ice, Other]
        help.en: If the temperature was defined by the procedure rather than the numerical
          value the value can be specified here (e.g. Room temperature, on ice, etc.)
      unit:
        use: '#/$defs/TEMPERATURE_UNITS'
        required: true
        help.en: The unit of temperature
      obtained_by:
        use: '#/$defs/OBTAINED_TYPES'
        required: true
        help.en: The means through which the temperature value was obtained
      controlled:
        type: boolean
        help.en: Whether the temperature was actively controlled
        required: true
  Pressure:
    properties:
      value:
        type: double
        help.en: The numeric value of the pressure
        required: true
      value_error:
        use: '#/$defs/Value_error'
        help.en: The reported error of the value of the pressure (e.g. standard deviation,
          % error)
      unit:
        use: '#/$defs/PRESSURE_UNITS'
        required: true
        help.en: The unit of the pressure
      obtained_by:
        use: '#/$defs/OBTAINED_TYPES'
        required: true
        help.en: The means through which the pressure value was obtained
      controlled:
        type: boolean
        help.en: Whether the pressure was actively controlled
        required: true
  Humidity:
    properties:
      value:
        type: double
        help.en: The numeric value of the humidity
        required: true
      value_error:
        use: '#/$defs/Value_error'
        help.en: The reported error of the value of the humidity (e.g. standard deviation,
          % error)
      unit:
        use: '#/$defs/HUMIDITY_UNITS'
        required: true
        help.en: The unit of the humidity
      obtained_by:
        use: '#/$defs/OBTAINED_TYPES'
        required: true
        help.en: The means through which the humidity value was obtained
      controlled:
        type: boolean
        help.en: Whether the humidity was actively controlled
        required: true
  Atmosphere:
    properties:
      composition[]:
        ^minItems: 1
        ^help.en: List of gases and their concentrations the atmosphere was composed
          of
        ^required: true
        use: '#/$defs/Chemical_constituent'
        type: polymorphic
        mapping:
          type: nested
  Time_duration:
    properties:
      value:
        type: double
        minimum: 0.0
        help.en: The numerical value of the time point or duration
        required: true
      value_error:
        use: '#/$defs/Value_error'
        help.en: The reported error of the value of the time point or duration (e.g.
          standard deviation, % error)
      unit:
        use: '#/$defs/TIME_UNITS'
        required: true
        help.en: The unit of the time duration
  Concentration:
    properties:
      value:
        type: double
        minimum: -1.0
        help.en: The numerical value of the concentration, -1 if unknown
        required: true
      value_error:
        use: '#/$defs/Value_error'
        help.en: The expected error of the concentration (e.g. standard  deviation,
          % error)
      unit:
        use: '#/$defs/CONCENTRATION_UNITS'
        required: true
        help.en: The unit of the concentration
      obtained_by:
        use: '#/$defs/OBTAINED_TYPES'
        help.en: The means through which the concentration was obtained
      obtained_protocol[]:
        ^minItems: 1
        ^help.en: Information of how the concentration was obtained (e.g, Absorbance
          at 280 nm, buffer absorbance subtraction, extinction coefficient
        use: '#/$defs/Step'
  Ionic_strength:
    properties:
      value:
        type: double
        minimum: 0.0
        help.en: The numerical value of the ionic strength (https://en.wikipedia.org/wiki/Ionic_strength)
        required: true
      unit:
        use: '#/$defs/CONCENTRATION_UNITS'
        required: true
        help.en: The unit of the ionic strength
  Molecular_weight:
    properties:
      value:
        type: double
        help.en: The numerical value of the molecular weight
        required: true
      value_error:
        use: '#/$defs/Value_error'
        help.en: The expected error of the molecular weight (e.g. standard  deviation,
          % error)
      unit:
        use: '#/$defs/MOLECULAR_WEIGHT_UNITS'
        required: true
        help.en: The unit of the molecular weight
  Size:
    properties:
      type:
        type: keyword
        enum: [radius, diameter, path length, Other]
        help.en: The type of size (e.g. radius)
        required: true
      mean:
        type: double
        minimum: 0.0
        help.en: The mean of the size
        required: true
      unit:
        use: '#/$defs/LENGTH_UNITS'
        required: true
        help.en: The unit of the size
      median:
        type: double
        minimum: 0.0
        help.en: The median of the size
      upper:
        type: double
        help.en: The upper bound of the size
      lower:
        type: double
        help.en: The lower bound of the size
      distribution_type:
        type: keyword
        help.en: The distribution type of sizes (e.g. log-normal)
  Measured_data_series:
    properties:
      id:
        type: uuid
        help.en: Unique ID for the measured data to be used as a link
        required: true
      name:
        type: keyword
        help.en: Short descriptive name of the data series
      values[]:
        ^minItems: 1
        ^help.en: The numerical values of the data series
        ^required: true
        type: double
      unit:
        type: keyword
        help.en: The numerical values of the data series
        required: true
  Performance_test:
    properties:
      sample_composition[]:
        ^minItems: 1
        ^help.en: The composition of the sample the performance test was carried out
          on
        ^required: true
        use: '#/$defs/Constituent'
        type: polymorphic
        mapping:
          type: nested
      published_test_protocol:
        use: '#/$defs/Publication'
        help.en: If the protocol used for the performance test has been published,
          the publication can be specified here
      report:
        type: url
        help.en: The file containing the report of the performance test, preferably
          in pdf
        required: true
        ui_file_context:
          type: keyword
          enum: [performance test report]
      additional_information:
        type: keyword
        help.en: Additional information about the performance test can be specified
          here
  Storage:
    properties:
      temperature:
        use: '#/$defs/Temperature'
        required: true
        help.en: The temperature the sample was stored at
      duration:
        use: '#/$defs/Time_duration'
        help.en: Length of time the sample was stored before being measured
      storage_preparation[]:
        ^minItems: 1
        ^help.en: The specific steps that were taken to prepare the samples for storage
          (e.g. flash freezing in liquid nitrogen), if applicable
        use: '#/$defs/Step'
  Supplier:
    properties:
      name:
        type: keyword
        help.en: Name of the supplier
        required: true
      catalog_number:
        type: keyword
        help.en: The catalog number or identifier of the item
      further_information[]:
        ^minItems: 1
        ^help.en: Further information e.g. batch number
        type: keyword
  Coordinates:
    properties:
      latitude:
        type: double
        minimum: -90.0
        maximum: 90.0
        help.en: The latitude, from south to north, in degrees (decimal notation)
        required: true
      longitude:
        type: double
        minimum: -180.0
        maximum: 180.0
        help.en: The longitude, from west to east, in degrees (decimal notation)
        required: true
  OBTAINED_TYPES:
    type: keyword
    enum: [Measurement, Calculation, Assumption, Other]
  CONCENTRATION_UNITS:
    type: keyword
    enum: [M, mM, µM, nM, pM, fM, aM, g/L, mg/mL, µg/mL, ng/mL, mol/kg, mmol/kg, v/v
        %, w/w %, v/w %, w/v %, U/ml, '% saturated']
  HUMIDITY_UNITS:
    type: keyword
    enum: ['%', g/m^3, oz/y^3]
  PRESSURE_UNITS:
    type: keyword
    enum: [Pa, kPa, MPa, Bar, mBar, atm, Torr, PSI, mmHg, inchHg]
  TEMPERATURE_UNITS:
    type: keyword
    enum: [K, °C, °F]
    required: true
  TIME_UNITS:
    type: keyword
    enum: [nanoseconds, microseconds, milliseconds, seconds, minutes, hours, days,
      months, years]
  LENGTH_UNITS:
    type: keyword
    enum: [Å, nm, μm, mm, cm, m]
  MOLECULAR_WEIGHT_UNITS:
    type: keyword
    enum: [g/mol, Da, kDa, MDa]
  SUPPORTED_TECHNIQUES:
    type: keyword
    enum: [Bio-layer interferometry (BLI), Microscale thermophoresis/Temperature related
        intensity change (MST/TRIC), Surface plasmon resonance (SPR)]
  COMPANIES:
    type: keyword
    enum: [Bio-Rad, Bruker, Cytiva, Gatorbio, GE Healthcare, Nanotemper, Nicoya Life,
      Sartorius, Malvern Panalytical, Refeyn, TA Instruments]
  ConstituentPolymerPolymorphic:
    properties:
      polymer_type:
        type: keyword
        enum: [cyclic-pseudo-peptide, peptide nucleic acid, polydeoxyribonucleotide,
          polydeoxyribonucleotide/polyribonucleotide hybrid, polypeptide(D), polypeptide(L),
          polyribonucleotide, Other]
        help.en: The type of polymer (e.g. polypeptide(L))
        required: true
        mapping:
          copy_to: collected_default_search_fields
      sequence:
        type: keyword
        help.en: Primary sequence of the polymer, using single letter codes, including
          variant (e.g. SAGRELLE, AGTTA,). For non-natural see link for nomenclature
        mapping:
          copy_to: collected_default_search_fields
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the polymer
      external_databases[]:
        ^minItems: 1
        ^help.en: List of identifiers to records in external databases containing
          information about the polymer can be specified here (e.g UNIPROT:Q8KRF6)
        type: keyword
        mapping:
          copy_to: collected_default_search_fields
      variant:
        type: keyword
        help.en: Descriptive name indicating differences of primary sequence of the
          polymer as compared to the most common form, or wildtype, including mutations,
          purification tags, etc. (A53T, C-terminal GFP, N-terminal 6xHis-tag)
        mapping:
          copy_to: collected_default_search_fields
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      modifications:
        use: '#/$defs/Polymer_modifications'
        help.en: If the polymer contains modifications such as non-natural aminoacids,
          post translational modification, or chemically modifications like labeling,
          it can be specified here
      expression_source_type:
        type: keyword
        enum: [Natively, Recombinantly, Synthetically]
        help.en: How the polymer was produced
        required: true
      expression_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
      supplier:
        use: '#/$defs/Supplier'
        help.en: If the polymer was purchased from a supplier, the name and catalog
          number can be specified here (Merck, SKU 10837059001)
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the polymer assembly between being acquired
          and measured, including temperature and duration
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the polymer can be specified here
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  ConstituentChemicalPolymorphic:
    properties:
      inchikey:
        type: keyword
        help.en: '[InChIKey]() identifier of the chemical. In case of chemical polymers
          please specify the InChIKey of the monomer and specify the specific type
          in the additional identifiers field (e.g. if PEG 3350 was employed, the
          InChiKey of ethylene glycol, i.e. LYCAIKOWRPUZTN-UHFFFAOYSA-N should be
          specified here)'
        required: true
        mapping:
          copy_to: collected_default_search_fields
      additional_identifiers[]:
        ^minItems: 1
        ^help.en: Unique and persistent identifier from an external source; options
          of sources are CAS number, Pubchem Compound ID, and Pubchem Substance ID
        type: keyword
      isotopic_labeling:
        type: keyword
        help.en: If the isotopic composition of the chemical was altered from the
          naturally occurring one, it can be specified here (e.g. 15N, 13C)
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the polymer
      supplier:
        use: '#/$defs/Supplier'
        help.en: The name of the supplier and the catalog number of the chemical
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the chemical can be specified here
          (e.g. RNase free water, recrystallization, desalting)
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  ConstituentMolecular_assemblyPolymorphic:
    properties:
      external_databases[]:
        ^minItems: 1
        ^help.en: List of identifiers to records in external databases containing
          information about the molecular assembly as a whole can be specified here
          (e.g. PDB:1YQ2 ); information about the individual components should be
          specified in the details of the individual components
        type: keyword
        mapping:
          copy_to: collected_default_search_fields
      components[]:
        ^minItems: 1
        ^help.en: Description of the individual components (e.g. polypeptide, heme,
          lipids, metal ions etc.) the molecular assembly is composed of (e.g. Hemoglobin
          alpha) and how many copies of each component were present
        ^required: true
        use: '#/$defs/Assembly_component'
        type: polymorphic
        mapping:
          type: nested
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the molecular assembly
      chemical_modifications[]:
        ^minItems: 1
        ^help.en: List describing deliberate modifications made to the molecular assembly
          through chemical, biochemical, or physical means
        use: '#/$defs/Modification'
        type: nested
      supplier:
        use: '#/$defs/Supplier'
        help.en: If the molecular assembly was purchased from a supplier, the name
          and catlog number can be specified here
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the molecular assembly was stored between being
          acquired and measured, including temperature and duration
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: The protocol used for preparing the molecular assembly
        use: '#/$defs/Step'
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the macromolecular assembly can be
          specified here
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  Assembly_componentPolymerPolymorphic:
    properties:
      polymer_type:
        type: keyword
        enum: [cyclic-pseudo-peptide, peptide nucleic acid, polydeoxyribonucleotide,
          polydeoxyribonucleotide/polyribonucleotide hybrid, polypeptide(D), polypeptide(L),
          polyribonucleotide, Other]
        help.en: The type of polymer (e.g. polypeptide(L))
        required: true
        mapping:
          copy_to: collected_default_search_fields
      sequence:
        type: keyword
        help.en: Primary sequence of the polymer, using single letter codes, including
          variant (e.g. SAGRELLE, AGTTA,). For non-natural see link for nomenclature
        mapping:
          copy_to: collected_default_search_fields
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the polymer
      external_databases[]:
        ^minItems: 1
        ^help.en: List of identifiers to records in external databases containing
          information about the polymer can be specified here (e.g UNIPROT:Q8KRF6)
        type: keyword
        mapping:
          copy_to: collected_default_search_fields
      variant:
        type: keyword
        help.en: Descriptive name indicating differences of primary sequence of the
          polymer as compared to the most common form, or wildtype, including mutations,
          purification tags, etc. (A53T, C-terminal GFP, N-terminal 6xHis-tag)
        mapping:
          copy_to: collected_default_search_fields
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      modifications:
        use: '#/$defs/Polymer_modifications'
        help.en: If the polymer contains modifications such as non-natural aminoacids,
          post translational modification, or chemically modifications like labeling,
          it can be specified here
      expression_source_type:
        type: keyword
        enum: [Natively, Recombinantly, Synthetically]
        help.en: How the polymer was produced
        required: true
      expression_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
      supplier:
        use: '#/$defs/Supplier'
        help.en: If the polymer was purchased from a supplier, the name and catalog
          number can be specified here (Merck, SKU 10837059001)
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the polymer assembly between being acquired
          and measured, including temperature and duration
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the polymer can be specified here
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) given to the assembly component. The
          name must be unique within a record
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical]
        help.en: The type of component, options are (biological) Polymer and Chemical
        required: true
      copy_number:
        type: double
        minimum: -1.0
        help.en: Number of molecules of the component within the assembly, -1 if unknown
        required: true
  Assembly_componentChemicalPolymorphic:
    properties:
      inchikey:
        type: keyword
        help.en: '[InChIKey]() identifier of the chemical. In case of chemical polymers
          please specify the InChIKey of the monomer and specify the specific type
          in the additional identifiers field (e.g. if PEG 3350 was employed, the
          InChiKey of ethylene glycol, i.e. LYCAIKOWRPUZTN-UHFFFAOYSA-N should be
          specified here)'
        required: true
        mapping:
          copy_to: collected_default_search_fields
      additional_identifiers[]:
        ^minItems: 1
        ^help.en: Unique and persistent identifier from an external source; options
          of sources are CAS number, Pubchem Compound ID, and Pubchem Substance ID
        type: keyword
      isotopic_labeling:
        type: keyword
        help.en: If the isotopic composition of the chemical was altered from the
          naturally occurring one, it can be specified here (e.g. 15N, 13C)
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the polymer
      supplier:
        use: '#/$defs/Supplier'
        help.en: The name of the supplier and the catalog number of the chemical
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the chemical can be specified here
          (e.g. RNase free water, recrystallization, desalting)
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) given to the assembly component. The
          name must be unique within a record
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical]
        help.en: The type of component, options are (biological) Polymer and Chemical
        required: true
      copy_number:
        type: double
        minimum: -1.0
        help.en: Number of molecules of the component within the assembly, -1 if unknown
        required: true
  ConstituentComplex_substance_of_biological_originPolymorphic:
    help.en: Information about the biological substance the complex substance is derived
      from
    required: true
    schemas:
      Body fluid:
        use: '#/$defs/Complex_substance_of_biological_originBody_fluidPolymorphic'
        required: true
      Cell fraction:
        use: '#/$defs/Complex_substance_of_biological_originCell_fractionPolymorphic'
        required: true
      Virion:
        use: '#/$defs/Complex_substance_of_biological_originVirionPolymorphic'
        required: true
    type: polymorphic
    discriminator: derived_from
  Complex_substance_of_biological_originBody_fluidPolymorphic:
    properties:
      fluid:
        type: keyword
        enum: [Blood, Fecal matter, Milk, Plasma, Saliva, Serum, Urine, Plant extract,
          Other]
        help.en: The body fluid the complex substance is derived from
        required: true
        mapping:
          copy_to: collected_default_search_fields
      health_status:
        type: keyword
        help.en: Health status of the donor organism where the body fluid was derived
          from (e.g. healthy, sick, patient with Diabetes type 2)
        required: true
      derived_from:
        type: keyword
        enum: [Body fluid, Cell fraction, Virion]
        help.en: The biological substance the complex substance is derived from
        required: true
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        required: true
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  Complex_substance_of_biological_originCell_fractionPolymorphic:
    properties:
      fraction:
        type: keyword
        enum: [Ribosome, Cell wall, VesicleCell lysate/Cytoplasm, Cell Membrane, Extracellular
            matrix, Lysosome, Golgi Apparatus, Mitochondrion, Nucleus, Rough Endoplasmic
            Reticulum, Smooth Endoplasmic Reticulum, Vacuole, Chloroplast, Other]
        help.en: The subcelluar component e.g. (Ribosome)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      organ:
        type: keyword
        help.en: The organ the cell fraction was derived from (e.g. heart)
      tissue:
        type: keyword
        help.en: The tissue type the cell fraction was derived from
      cell_type:
        type: keyword
        help.en: The cell type the cell fraction was derived from
      health_status:
        type: keyword
        help.en: Health status of the donor organism where the cell fraction was derived
          from (e.g. healthy, sick, patient with Diabetes type 2)
        required: true
      derived_from:
        type: keyword
        enum: [Body fluid, Cell fraction, Virion]
        help.en: The biological substance the complex substance is derived from
        required: true
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        required: true
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  Complex_substance_of_biological_originVirionPolymorphic:
    properties:
      genetic_material:
        type: keyword
        enum: [No genetic material, Virus genome, Synthetic, Other]
        help.en: The genetic material carried by the virions (None, virus genome,
          synthetic)
        required: true
      capsid_type:
        type: keyword
        enum: [None, Native, Genetically Engineered, Synthetic, Other]
        help.en: The type of virion capsid (e.g. genetically engineered, None
        required: true
      envelope_type:
        type: keyword
        enum: [None, Native, Genetically Engineered, Synthetic, Other]
        help.en: The type of virion envelope (e.g. genetically engineered, None
        required: true
      host_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
      host_cell_type:
        type: keyword
        help.en: The host cell type the virion was produced in
      derived_from:
        type: keyword
        enum: [Body fluid, Cell fraction, Virion]
        help.en: The biological substance the complex substance is derived from
        required: true
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        required: true
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  ConstituentComplex_substance_of_environmental_originPolymorphic:
    properties:
      source:
        type: keyword
        enum: [Fresh water, Marine, Ice core, Sediment, Sewage, Soil, Other]
        help.en: The environmental source where the complex substance was derived
          from
        required: true
        mapping:
          copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      location:
        use: '#/$defs/Coordinates'
        required: true
        help.en: The coordinates, in decimal notation, where the complex substance
          was collected
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  ConstituentComplex_substance_of_chemical_originPolymorphic:
    properties:
      class:
        type: keyword
        enum: [Lipid_assembly]
        help.en: The chemical origin where the complex substance was derived from
        required: true
      details:
        use: '#/$defs/Lipid_assembly'
        required: true
        help.en: The chemical origin where the complex substance was derived from
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  ConstituentComplex_substance_of_industrial_production_originPolymorphic:
    properties:
      product:
        type: keyword
        enum: [Beer, Cell medium, Whey, Other]
        help.en: The type of product, byproduct, or waste product the complex substance
          was derived from
        required: true
        mapping:
          copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record (e.g. NaCl, Human serum P1, Lysozyme, etc.)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the constituent, options are Polymer, Chemical, and defined
          assembly
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  Chemical_constituentChemicalPolymorphic:
    properties:
      inchikey:
        type: keyword
        help.en: '[InChIKey]() identifier of the chemical. In case of chemical polymers
          please specify the InChIKey of the monomer and specify the specific type
          in the additional identifiers field (e.g. if PEG 3350 was employed, the
          InChiKey of ethylene glycol, i.e. LYCAIKOWRPUZTN-UHFFFAOYSA-N should be
          specified here)'
        required: true
        mapping:
          copy_to: collected_default_search_fields
      additional_identifiers[]:
        ^minItems: 1
        ^help.en: Unique and persistent identifier from an external source; options
          of sources are CAS number, Pubchem Compound ID, and Pubchem Substance ID
        type: keyword
      isotopic_labeling:
        type: keyword
        help.en: If the isotopic composition of the chemical was altered from the
          naturally occurring one, it can be specified here (e.g. 15N, 13C)
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the polymer
      supplier:
        use: '#/$defs/Supplier'
        help.en: The name of the supplier and the catalog number of the chemical
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the chemical can be specified here
          (e.g. RNase free water, recrystallization, desalting)
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the constituent, must be unique within
          a record
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Chemical]
        help.en: The type of the constituent, options are Chemical
        required: true
      concentration:
        use: '#/$defs/Concentration'
        required: true
        help.en: Concentration of the constituent including its relative concentration
          related to the collected sample or absolute concentration of the constituent
  EntityPolymerPolymorphic:
    properties:
      polymer_type:
        type: keyword
        enum: [cyclic-pseudo-peptide, peptide nucleic acid, polydeoxyribonucleotide,
          polydeoxyribonucleotide/polyribonucleotide hybrid, polypeptide(D), polypeptide(L),
          polyribonucleotide, Other]
        help.en: The type of polymer (e.g. polypeptide(L))
        required: true
        mapping:
          copy_to: collected_default_search_fields
      sequence:
        type: keyword
        help.en: Primary sequence of the polymer, using single letter codes, including
          variant (e.g. SAGRELLE, AGTTA,). For non-natural see link for nomenclature
        mapping:
          copy_to: collected_default_search_fields
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the polymer
      external_databases[]:
        ^minItems: 1
        ^help.en: List of identifiers to records in external databases containing
          information about the polymer can be specified here (e.g UNIPROT:Q8KRF6)
        type: keyword
        mapping:
          copy_to: collected_default_search_fields
      variant:
        type: keyword
        help.en: Descriptive name indicating differences of primary sequence of the
          polymer as compared to the most common form, or wildtype, including mutations,
          purification tags, etc. (A53T, C-terminal GFP, N-terminal 6xHis-tag)
        mapping:
          copy_to: collected_default_search_fields
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      modifications:
        use: '#/$defs/Polymer_modifications'
        help.en: If the polymer contains modifications such as non-natural aminoacids,
          post translational modification, or chemically modifications like labeling,
          it can be specified here
      expression_source_type:
        type: keyword
        enum: [Natively, Recombinantly, Synthetically]
        help.en: How the polymer was produced
        required: true
      expression_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
      supplier:
        use: '#/$defs/Supplier'
        help.en: If the polymer was purchased from a supplier, the name and catalog
          number can be specified here (Merck, SKU 10837059001)
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the polymer assembly between being acquired
          and measured, including temperature and duration
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the polymer can be specified here
        type: keyword
      id:
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
  EntityChemicalPolymorphic:
    properties:
      inchikey:
        type: keyword
        help.en: '[InChIKey]() identifier of the chemical. In case of chemical polymers
          please specify the InChIKey of the monomer and specify the specific type
          in the additional identifiers field (e.g. if PEG 3350 was employed, the
          InChiKey of ethylene glycol, i.e. LYCAIKOWRPUZTN-UHFFFAOYSA-N should be
          specified here)'
        required: true
        mapping:
          copy_to: collected_default_search_fields
      additional_identifiers[]:
        ^minItems: 1
        ^help.en: Unique and persistent identifier from an external source; options
          of sources are CAS number, Pubchem Compound ID, and Pubchem Substance ID
        type: keyword
      isotopic_labeling:
        type: keyword
        help.en: If the isotopic composition of the chemical was altered from the
          naturally occurring one, it can be specified here (e.g. 15N, 13C)
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the polymer
      supplier:
        use: '#/$defs/Supplier'
        help.en: The name of the supplier and the catalog number of the chemical
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the chemical can be specified here
          (e.g. RNase free water, recrystallization, desalting)
        type: keyword
      id:
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
  EntityMolecular_assemblyPolymorphic:
    properties:
      external_databases[]:
        ^minItems: 1
        ^help.en: List of identifiers to records in external databases containing
          information about the molecular assembly as a whole can be specified here
          (e.g. PDB:1YQ2 ); information about the individual components should be
          specified in the details of the individual components
        type: keyword
        mapping:
          copy_to: collected_default_search_fields
      components[]:
        ^minItems: 1
        ^help.en: Description of the individual components (e.g. polypeptide, heme,
          lipids, metal ions etc.) the molecular assembly is composed of (e.g. Hemoglobin
          alpha) and how many copies of each component were present
        ^required: true
        use: '#/$defs/Assembly_component'
        type: polymorphic
        mapping:
          type: nested
      molecular_weight:
        use: '#/$defs/Molecular_weight'
        required: true
        help.en: The molecular weight of the molecular assembly
      chemical_modifications[]:
        ^minItems: 1
        ^help.en: List describing deliberate modifications made to the molecular assembly
          through chemical, biochemical, or physical means
        use: '#/$defs/Modification'
        type: nested
      supplier:
        use: '#/$defs/Supplier'
        help.en: If the molecular assembly was purchased from a supplier, the name
          and catlog number can be specified here
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the molecular assembly was stored between being
          acquired and measured, including temperature and duration
      quality_controls[]:
        ^minItems: 1
        ^help.en: Quality controls performed e.g. purity, aggregation state etc.
        use: '#/$defs/Quality_control'
        type: nested
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: The protocol used for preparing the molecular assembly
        use: '#/$defs/Step'
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the macromolecular assembly can be
          specified here
        type: keyword
      id:
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
  EntityComplex_substance_of_biological_originPolymorphic:
    help.en: Information about the biological substance the complex substance is derived
      from
    required: true
    schemas:
      Body fluid:
        use: '#/$defs/entity_Complex_substance_of_biological_originBody_fluidPolymorphic'
        required: true
      Cell fraction:
        use: '#/$defs/entity_Complex_substance_of_biological_originCell_fractionPolymorphic'
        required: true
      Virion:
        use: '#/$defs/entity_Complex_substance_of_biological_originVirionPolymorphic'
        required: true
    type: polymorphic
    discriminator: derived_from
  entity_Complex_substance_of_biological_originBody_fluidPolymorphic:
    properties:
      fluid:
        type: keyword
        enum: [Blood, Fecal matter, Milk, Plasma, Saliva, Serum, Urine, Plant extract,
          Other]
        help.en: The body fluid the complex substance is derived from
        required: true
        mapping:
          copy_to: collected_default_search_fields
      health_status:
        type: keyword
        help.en: Health status of the donor organism where the body fluid was derived
          from (e.g. healthy, sick, patient with Diabetes type 2)
        required: true
      derived_from:
        type: keyword
        enum: [Body fluid, Cell fraction, Virion]
        help.en: The biological substance the complex substance is derived from
        required: true
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        required: true
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      id:
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
  entity_Complex_substance_of_biological_originCell_fractionPolymorphic:
    properties:
      fraction:
        type: keyword
        enum: [Ribosome, Cell wall, VesicleCell lysate/Cytoplasm, Cell Membrane, Extracellular
            matrix, Lysosome, Golgi Apparatus, Mitochondrion, Nucleus, Rough Endoplasmic
            Reticulum, Smooth Endoplasmic Reticulum, Vacuole, Chloroplast, Other]
        help.en: The subcelluar component e.g. (Ribosome)
        required: true
        mapping:
          copy_to: collected_default_search_fields
      organ:
        type: keyword
        help.en: The organ the cell fraction was derived from (e.g. heart)
      tissue:
        type: keyword
        help.en: The tissue type the cell fraction was derived from
      cell_type:
        type: keyword
        help.en: The cell type the cell fraction was derived from
      health_status:
        type: keyword
        help.en: Health status of the donor organism where the cell fraction was derived
          from (e.g. healthy, sick, patient with Diabetes type 2)
        required: true
      derived_from:
        type: keyword
        enum: [Body fluid, Cell fraction, Virion]
        help.en: The biological substance the complex substance is derived from
        required: true
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        required: true
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      id:
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
  entity_Complex_substance_of_biological_originVirionPolymorphic:
    properties:
      genetic_material:
        type: keyword
        enum: [No genetic material, Virus genome, Synthetic, Other]
        help.en: The genetic material carried by the virions (None, virus genome,
          synthetic)
        required: true
      capsid_type:
        type: keyword
        enum: [None, Native, Genetically Engineered, Synthetic, Other]
        help.en: The type of virion capsid (e.g. genetically engineered, None
        required: true
      envelope_type:
        type: keyword
        enum: [None, Native, Genetically Engineered, Synthetic, Other]
        help.en: The type of virion envelope (e.g. genetically engineered, None
        required: true
      host_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
      host_cell_type:
        type: keyword
        help.en: The host cell type the virion was produced in
      derived_from:
        type: keyword
        enum: [Body fluid, Cell fraction, Virion]
        help.en: The biological substance the complex substance is derived from
        required: true
      source_organism:
        keys: [id, title, props.rank]
        vocabulary-type: organisms
        type: vocabulary
        required: true
        extras:
          title:
            mapping:
              properties:
                en:
                  copy_to: collected_default_search_fields
          id:
            mapping:
              copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      id:
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
  EntityComplex_substance_of_environmental_originPolymorphic:
    properties:
      source:
        type: keyword
        enum: [Fresh water, Marine, Ice core, Sediment, Sewage, Soil, Other]
        help.en: The environmental source where the complex substance was derived
          from
        required: true
        mapping:
          copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      location:
        use: '#/$defs/Coordinates'
        required: true
        help.en: The coordinates, in decimal notation, where the complex substance
          was collected
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      id:
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
  EntityComplex_substance_of_chemical_originPolymorphic:
    properties:
      class:
        type: keyword
        enum: [Lipid_assembly]
        help.en: The chemical origin where the complex substance was derived from
        required: true
      details:
        use: '#/$defs/Lipid_assembly'
        required: true
        help.en: The chemical origin where the complex substance was derived from
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      id:
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
  EntityComplex_substance_of_industrial_production_originPolymorphic:
    properties:
      product:
        type: keyword
        enum: [Beer, Cell medium, Whey, Other]
        help.en: The type of product, byproduct, or waste product the complex substance
          was derived from
        required: true
        mapping:
          copy_to: collected_default_search_fields
      preparation_protocol[]:
        ^minItems: 1
        ^help.en: List of the steps performed during the preparation of the complex
          substance
        ^required: true
        use: '#/$defs/Step'
      storage:
        use: '#/$defs/Storage'
        help.en: Information about how the complex substance was stored between being
          acquired and measured, including temperature and duration
      additional_specifications[]:
        ^minItems: 1
        ^help.en: Additional information about the complex substance can be specified
          here
        type: keyword
      id:
        type: keyword
      name:
        type: keyword
        help.en: Short descriptive name (id) of the entity; must be unique within
          a record (e.g. Lysozyme, Serum from Patient 1). This name is referenced
          in the measurement description to identify the entities present in measured
          sample
        required: true
        mapping:
          copy_to: collected_default_search_fields
      type:
        type: keyword
        enum: [Polymer, Chemical, Molecular assembly, Complex substance of biological
            origin, Complex substance of environmental origin, Complex substance of
            chemical origin, Complex substance of industrial production origin]
        help.en: The type of the entity, where the options are (biological) Polymer,
          Chemical, Molecular assembly or Complex substance. Chemical polymers such
          as PEG 5000 should be described as being a Chemical. Complex substance refers
          to substances which are not exactly specified by their exact chemical composition
          by the time measurement were performed, but e.g. blood, serum, plant extract
        required: true
        mapping:
          copy_to: collected_default_search_fields
settings:
  i18n-languages: [en]
  extension-elements: [ui_file_context]